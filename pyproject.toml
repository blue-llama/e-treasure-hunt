[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "e-treasure-hunt"
version = "0.1.0"
description = ""
authors = ["David Hotham <david.hotham@blueyonder.co.uk>"]
packages = [
  { include = "hunt" },
  { include = "treasure" },
]

[tool.poetry.dependencies]
python = ">=3.10"
django = "^4.2"
django-storages = [
  { version = "^1.13.1" },
  { version = "^1.13.1", extras = ["azure"], markers = "extra == 'azure'" },
]
djangorestframework = "^3.14.0"
geopy = "^2.3.0"
holidays = "^0.29"
pillow = "^10.0.0"
whitenoise = "^6.4.0"

# Things needed for azure deployment.
azure-identity = { version = "^1.13.0", optional = true }
mssql-django = { version = "^1.3", optional = true }

[tool.poetry.extras]
azure = ["azure-identity", "mssql-django"]

[tool.poetry.group.lint.dependencies]
black = ">=23.3.0"
mypy = ">=1.2.0"
ruff = ">=0.0.262"

[tool.poetry.group.misc.dependencies]
requests = ">=2.28.1"
pydantic = "^2.0.3"

[tool.poetry.group.types.dependencies]
django-stubs = ">=1.13.1"
djangorestframework-stubs = ">=1.8.0"
types-backports = ">=0.1.3"
types-requests = ">=2.28.11.5"

[tool.black]
exclude = "hunt/migrations"

[tool.mypy]
files = "."
strict = true
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
show_error_codes = true
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
  "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = [
  "geopy.*",
]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "treasure.settings"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
select = [
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "DJ",  # flake8-django
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle
  "EXE", # flake8-executable
  "F",   # pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-string-concat
  "N",   # pep8-naming
  "PIE", # flake8-pie
  "PLE", # pylint errors
  "PLW", # pylint warnings
  "PTH", # flake8-use-pathlib
  "RUF", # ruff
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
extend-exclude = [
  "hunt/migrations",
]
target-version = "py310"
unfixable = [
  "F841", # unused-variable
]

[tool.ruff.flake8-type-checking]
strict = true
